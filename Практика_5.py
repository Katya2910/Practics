# -*- coding: utf-8 -*-
"""Копия блокнота "Практика 0.6.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-2jgtqJUzjIl39W0LkcLX05nFQLUwsPF

---

# **Дисклеймер**

В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики

---

# Задание 1

**Задача:**

Напишите функцию очищающий список от дубликтов


*Запрещено:*

*   Использовать set() или готовые функции очищающие список от дубликатов

Вввод:

```
apple banana apple 1 3 4 4 5
```


Вывод:

```
apple banana 1 3 4 5
```
"""

message=input().split()
new_message=list(message)

def delete_duplicate(new_message):
  unique_list = []
  for element in new_message:
    if element not in unique_list:
      unique_list.append(element)
  return unique_list

print(*delete_duplicate(new_message))

"""# Задание 2

**Задача:**

Написать функцию для нахождения простых чисел в диапазоне

Ввод:

```
10, 50
```

Вывод:

```
11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47
```
"""

a, b = map(int,input().split())

def find_prime_numbers(a,b):
  is_prime=[True]*(b+1)
  current_prime_number=2
  while current_prime_number**2<=b:
      if is_prime[current_prime_number]:
          for i in range(current_prime_number**2,b+1,current_prime_number):
              is_prime[i]=False
      current_prime_number+=1
  primes=[]
  for i in range(a,b+1):
      if is_prime[i]:
          primes.append(i)
  return primes

print(*find_prime_numbers(a,b))

"""# Задание 3

Напишите функцию для объединения двух списков (список ключей и список значении) в словарь

*Запрещено:*

*   Использования готовых функции для объединения списков (пример: zip() )

Дано:

```
keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]
```

Вывод:
```
{'a': 1, 'b': 2, 'c': 3, 'e': 4}
```



"""

keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]

def unification_of_lists():
  dict={}
  for i in range(len(keys)):
    dict[keys[i]]=values[i]
  return dict

print(unification_of_lists())

"""# Задание 4

Напишите функцию(ии) для подсчета статистических параметров:
*   Сумму
*   Среднее арифметическое
*   Медиану
*   Моду


*Запрещено:*

*   sum()
*   sorted()
*   и других функции предоставляющих готовое решение задания

Дано:

```
numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]

```

Вывод:
```
{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}
```

"""

numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]

def sum_value(numbers):
  sum_of_elements=0
  for number in numbers:
    sum_of_elements+=number
  return sum_of_elements

def average_value(numbers):
  count_of_elements=0
  for number in numbers:
    count_of_elements+=1
  arithmetic_average=sum_value(numbers)/count_of_elements
  return arithmetic_average

def median_value(numbers):
  count_of_elements=0
  for number in numbers:
    count_of_elements+=1
  if count_of_elements%2!=0:
    median=numbers[count_of_elements//2]
  else:
    median=(numbers[count_of_elements//2]-numbers[(count_of_elements-1)//2])//2
  return median

def mode_value(numbers):
  counts={}
  for number in numbers:
    if number in counts:
      counts[number]+=1
    else:
      counts[number]=1
  max_count=0
  mode=None
  for number,count in counts.items():
    if count>max_count:
      max_count=count
      mode=number
  return mode

result={
  'mean': average_value(numbers),
  'median': median_value(numbers),
  'mode': mode_value(numbers),
  'sum': sum_value(numbers),
}

print(result)

"""# Задание 5

На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.

*Запрещено:*

*   len()

Дано:

```
Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.

```

Вывод:
```
Самое длинное слово с номером 5: обязательны
```
"""

message=input().split()
max_len_of_word=0
max_word=''
max_word_index=-1
current_index=1

for word in message:
  count_of_chars=0
  for char in word:
      count_of_chars+=1
  if count_of_chars>max_len_of_word:
      max_len_of_word=count_of_chars
      max_word=word
      max_word_index=current_index
  current_index+=1

print(f"Самое длинное слово с номером {max_word_index}: {max_word}")

"""# Задание 6

Напишите программу, для управления оценками студентов, со следующими функциями:

* Добавление информации о студенте и его оценках.
* Подсчет среднего балла студента.
* Получение списка всех студентов с их средними баллами.
* Поиск студента по имени и вывод его оценок и среднего балла.




"""

students = {
    'Алина': [5, 4, 5],
    'Павел': [4, 2, 3],
    'Светлана': [5, 5, 5],
    'Константин': [4, 5, 5],
}

def add_information(name, score):
  if name in students:
    for score in scores:
      if 1 <= score <= 5:
        students[name].append(score)
      else:
        print("Введите оценку от 1 до 5.")
  return (f'Информация о студенте {name} добавлена')

def average_score(name):
    if name in students:
        scores=students[name]
        sum_of_scores = 0
        for score in scores:
            sum_of_scores+=score
        average_score=sum_of_scores/len(scores)
        return average_score
    else:
        print(f"Студент {name} не найден.")

def list_of_students_and_scores():
  for name in students:
    average_score_of_student=average_score(name)
    print(f"{name}: {average_score_of_student}")

def scores_of_student():
    name=input('Введите имя студента: ')
    if name in students:
        scores=students[name]
        avg_score=average_score(name)
        print(f"Оценки студента {name}: {scores}")
        print(f"Средний балл: {avg_score}")
    else:
        print(f"Студент {name} не найден.")

print("Здравствуйте! Что Вы желаете воспроизвести сегодня? :)")
print("1. Добавить информацию о студенте")
print("2. Подсчитать средний балл студента")
print("3. Получить список всех студентов с их средними баллами")
print("4. Найти студента по имени и вывести его оценки и средний балл")
choice=input("Выберите действие: ")
if choice=='1':
  name=input('Введите имя студента: ')
  scores_input = input('Введите оценки: ')
  scores=[int(score) for score in scores_input.split()]
  print(add_information(name, scores))
elif choice=='2':
  name=input('Введите имя студента: ')
  print(average_score(name))
elif choice=='3':
  list_of_students_and_scores()
elif choice=='4':
  scores_of_student()
else:
  print("Неверный выбор, попробуйте снова.")

"""# Задание 7


**Задача:**

Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.

Ключевые особенности:

*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос
*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.
*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.
*  Реализуйте функцию добавления нового вопроса
*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса

"""

import random

questions_and_answers={
    'Что можно увидеть с закрытыми глазами?': {'Сон', 15},
    'Какая самая длинная река в мире?': {'Нил', 10},
    'Столица Португалии?': {'Лиссабон',20}
}

scores=0

def ask_question(question, answer, score):
    user_answer=input(f"{question} ")
    if user_answer==answer:
        print("Правильно!")
        return score
    else:
        print(f"Неправильно! Правильный ответ: {answer}")
        return 0

def add_question():
    question=input("Введите новый вопрос: ")
    answer=input("Введите правильный ответ: ")
    score=int(input("Введите балл за этот вопрос: "))
    questions_and_answers[question]={answer, score}
    print("Вопрос добавлен!")

def mixing_of_questions(questions):
    questions_list=list(questions.items())
    n=len(questions_list)
    for i in range(n-1,0,-1):
       j = int(random.random()*(i+1))
       questions_list[i], questions_list[j]=questions_list[j], questions_list[i]
    return questions_list

def start_quiz(questions):
    total_score = 0
    for question, (answer, score) in mixing_of_questions(questions):
        total_score+=ask_question(question, answer, score)
    print(f"Ваш общий балл: {total_score}")

print("Привет! Ну что, поиграем?) Выбери, что желаешь!")
print("1. Начать викторину")
print("2. Добавить новый вопрос")
choice = input("Выберите действие: ")
if choice=='1':
  start_quiz(questions_and_answers)
elif choice=='2':
  add_question()
else:
    print("Неверный выбор, попробуйте снова.")